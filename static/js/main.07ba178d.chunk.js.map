{"version":3,"sources":["constants/mediaType.ts","constants/uploadedMediaDefaults.ts","components/deckItems/uploadedImage.tsx","components/deckItems/uploadedVideo.tsx","components/modal.tsx","components/deckItems/editableText.tsx","components/componentHandler.tsx","components/deckItems.tsx","constants/knownExtensions.ts","helper/extensionHelper.ts","dragAndDropContainer.tsx","app.tsx","index.tsx"],"names":["MediaType","UploadedMediaDefault","width","zIndex","UploadedImage","props","src","URL","createObjectURL","file","onContextMenu","onChildClick","onClick","draggable","alt","name","UploadedVideo","autoPlay","loop","muted","type","customStyles","content","top","left","right","bottom","marginRight","transform","SimpleModal","React","useState","modalIsOpen","setIsOpen","closeModal","openModalRenderer","isOpen","onRequestClose","style","contentLabel","title","children","showSaveButton","className","EditableText","passedDownText","text","value","setValue","openFunc","callback","e","preventDefault","isSelected","isContextMenuClick","dangerouslySetInnerHTML","__html","theme","onChange","modules","toolbar","container","formats","ComponentHandler","uuid","clientX","clientY","media","styleObj","setSelectedFile","inner","image","video","classNames","toString","DeckItems","selectedFile","files","selectedFileUuid","map","fileMeta","target","individualGroupable","origin","edge","throttleDrag","onDrag","keepRatio","resizable","throttleResize","onResize","height","delta","rotatable","throttleRotate","onRotate","KnownExtensions","getExtension","filename","regexMatch","exec","DragAndDropContainer","isOver","setOver","addText","addFile","uuidv4","handleDatatranferItems","dataTransferItems","i","length","dataTransferItem","kind","getAsFile","fileExt","isVideo","includes","onDragEnter","onDragOver","stopPropagation","onDragLeave","onDrop","dataTransfer","items","onPaste","isFile","clipboardData","isText","types","getData","onDoubleClick","mouseTrap","require","AppUnTrapped","_deselect","_deleteFile","state","setState","prevState","filter","f","_incZIndex","_alterZIndex","_decZIndex","modifer","index","findIndex","newIndex","alteredItem","slice","this","bindShortcut","Modal","setAppElement","unbindShortcut","PureComponent","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.07ba178d.chunk.js","sourcesContent":["export enum MediaType {\r\n    image,\r\n    video,\r\n    text\r\n}","export class UploadedMediaDefault {\r\n    static width = 200;\r\n    static zIndex = 1;\r\n}","import React from 'react';\r\n\r\ninterface IProps {\r\n    file: File;\r\n    onChildClick: (e: any) => void;\r\n}\r\n\r\nexport const UploadedImage: React.FC<IProps> = (props: IProps) => {\r\n    return (\r\n        <img\r\n            src={URL.createObjectURL(props.file)}\r\n            onContextMenu={props.onChildClick}\r\n            onClick={props.onChildClick}\r\n            draggable={false}\r\n            alt={props.file.name}\r\n        />\r\n    );\r\n};\r\n","import React from 'react';\r\n\r\ninterface IProps {\r\n    file: File;\r\n    onChildClick: (e: any) => void;\r\n}\r\n\r\nexport const UploadedVideo: React.FC<IProps> = (props: IProps) => {\r\n    return (\r\n        <video autoPlay loop muted\r\n            onContextMenu={props.onChildClick}\r\n            onClick={props.onChildClick}\r\n        >\r\n            <source src={URL.createObjectURL(props.file)}\r\n                type=\"video/mp4\"\r\n                draggable={false}>\r\n            </source>\r\n        </video>\r\n    );\r\n};\r\n","import React, { ReactNode } from 'react';\r\nimport Modal from 'react-modal';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\ninterface IProps {\r\n    title: string;\r\n    className?: string;\r\n    children: ReactNode;\r\n    showSaveButton?: boolean;\r\n    openModalRenderer: (open: () => void) => ReactNode;\r\n}\r\n\r\nexport const SimpleModal: React.FC<IProps> = (props: IProps) => {\r\n    const [modalIsOpen, setIsOpen] = React.useState(false);\r\n\r\n    const openModal = () => {\r\n        setIsOpen(true);\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setIsOpen(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {props.openModalRenderer(openModal)}\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel={props.title}\r\n            >\r\n                {props.children}\r\n                {\r\n                    props.showSaveButton &&\r\n                    <button className=\"button\" onClick={closeModal}>Save</button>\r\n                }\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport const setUpModal = () => {\r\n    Modal.setAppElement('#quill-modal')\r\n}","import React, { useState } from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport { SimpleModal } from '../modal';\r\n\r\ninterface IProps {\r\n    file: File;\r\n    isSelected: boolean;\r\n    onChildClick: (e: any) => void;\r\n}\r\n\r\nexport const EditableText: React.FC<IProps> = (props: IProps) => {\r\n    const passedDownText = (props.file as any)?.text;\r\n    const [value, setValue] = useState(passedDownText ?? 'Something funny');\r\n\r\n    const modulesQuill = {\r\n        toolbar: {\r\n            container: [\r\n                [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\r\n                [{ 'font': [] }],\r\n                ['bold', 'italic', 'underline'],\r\n                [\r\n                    { 'list': 'ordered' }, { 'list': 'bullet' },\r\n                    { 'color': ['#000000', '#e60000', '#ff9900', '#ffff00', '#008a00', '#0066cc', '#9933ff', '#ffffff', '#facccc', '#ffebcc', '#ffffcc', '#cce8cc', '#cce0f5', '#ebd6ff', '#bbbbbb', '#f06666', '#ffc266', '#ffff66', '#66b966', '#66a3e0', '#c285ff', '#888888', '#a10000', '#b26b00', '#b2b200', '#006100', '#0047b2', '#6b24b2', '#444444', '#5c0000', '#663d00', '#666600', '#003700', '#002966', '#3d1466', 'custom-color'] },\r\n                ],\r\n            ],\r\n        },\r\n    };\r\n\r\n    const formatsQuill = [\r\n        'header', 'font', 'size',\r\n        'bold', 'italic', 'underline',\r\n        'list', 'bullet', 'color',\r\n    ];\r\n\r\n    const contextMenuWrapper = (callback: () => void) => (e: any) => {\r\n        e.preventDefault();\r\n        if (props.isSelected) props?.onChildClick?.({ ...e, isContextMenuClick: true });\r\n        callback();\r\n    }\r\n\r\n    return (\r\n        <SimpleModal\r\n            title=\"Edit Text\"\r\n            className=\"text-modal\"\r\n            showSaveButton={true}\r\n            openModalRenderer={(openFunc) => (\r\n                <div className=\"text\" onClick={props.onChildClick} onContextMenu={contextMenuWrapper(openFunc)}>\r\n                    <div dangerouslySetInnerHTML={{ __html: value }}></div>\r\n                </div>\r\n            )}>\r\n            <ReactQuill theme=\"snow\"\r\n                value={value}\r\n                onChange={setValue}\r\n                modules={modulesQuill}\r\n                formats={formatsQuill}\r\n            />\r\n        </SimpleModal>\r\n    );\r\n};","import React, { ReactNode } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport { MediaType } from '../constants/mediaType';\r\nimport { UploadedMediaDefault } from '../constants/uploadedMediaDefaults';\r\nimport { IUploadedImageMeta } from '../constracts/uploadedImageMeta';\r\nimport { UploadedImage } from './deckItems/uploadedImage';\r\nimport { UploadedVideo } from './deckItems/uploadedVideo';\r\nimport { EditableText } from './deckItems/editableText';\r\n\r\ninterface IProps extends IUploadedImageMeta {\r\n    isSelected: boolean;\r\n    setSelectedFile: (uuid: string) => void;\r\n}\r\n\r\nexport const ComponentHandler: React.FC<IProps> = (props: IProps) => {\r\n    const { uuid,\r\n        isSelected,\r\n        clientX,\r\n        clientY,\r\n        media,\r\n        zIndex } = props;\r\n\r\n    const styleObj = {\r\n        top: clientY,\r\n        left: clientX,\r\n        width: UploadedMediaDefault.width,\r\n        zIndex: zIndex,\r\n    };\r\n\r\n    const onChildClick = (type: MediaType) => (e: any) => {\r\n        e?.preventDefault?.();\r\n\r\n        if (type === MediaType.text && isSelected && e.isContextMenuClick) {\r\n            props?.setSelectedFile?.('');\r\n            return;\r\n        }\r\n\r\n        // if (isSelected) props?.setSelectedFile?.('');\r\n        // else props?.setSelectedFile?.(uuid);\r\n\r\n        if (isSelected) return;\r\n        props?.setSelectedFile?.(uuid);\r\n    }\r\n\r\n    let inner: ReactNode = (<div>Something went wrong</div>);\r\n    if (media === MediaType.image) { inner = (<UploadedImage file={props.file} onChildClick={onChildClick(MediaType.image)} />); }\r\n    if (media === MediaType.video) { inner = (<UploadedVideo file={props.file} onChildClick={onChildClick(MediaType.video)} />); }\r\n    if (media === MediaType.text) { inner = (<EditableText file={props.file} isSelected={isSelected} onChildClick={onChildClick(MediaType.text)} />); }\r\n\r\n    return (\r\n        <div\r\n            key={`uploadedImg-${uuid}`}\r\n            className={classNames('uploaded-media', 'noselect', { 'selected': isSelected })}\r\n            style={styleObj}\r\n        >\r\n            {inner}\r\n            <div className=\"meta noselect\">\r\n                {\r\n                    isSelected && <span className=\"abs-top-right noselect\">z-index:&nbsp;{zIndex.toString()}</span>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport Moveable from \"react-moveable\";\r\nimport { MediaType } from '../constants/mediaType';\r\n\r\nimport { IUploadedImageMeta } from '../constracts/uploadedImageMeta';\r\nimport { ComponentHandler } from './componentHandler';\r\n\r\ninterface IProps {\r\n    files: Array<IUploadedImageMeta>\r\n    selectedFileUuid: string;\r\n    setSelectedFile: (uuid: string) => void;\r\n}\r\n\r\nexport const DeckItems: React.FC<IProps> = (props: IProps) => {\r\n\r\n    let selectedFile: IUploadedImageMeta | null = null;\r\n    for (const file of props.files) {\r\n        if (file.uuid === props.selectedFileUuid) {\r\n            selectedFile = { ...file };\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div key=\"container\" className=\"deck-items\">\r\n            {\r\n                props.files.map((fileMeta: IUploadedImageMeta) => {\r\n                    return (\r\n                        <ComponentHandler\r\n                            key={fileMeta.uuid}\r\n                            {...fileMeta}\r\n                            isSelected={fileMeta.uuid === props.selectedFileUuid}\r\n                            setSelectedFile={props.setSelectedFile}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n            {\r\n                (selectedFile != null) &&\r\n                <Moveable\r\n                    key={`movable-${selectedFile.uuid}`}\r\n                    target=\".selected\"\r\n                    className=\"noselect\"\r\n                    individualGroupable={true}\r\n                    container={null}\r\n                    origin={false}\r\n                    edge={false}\r\n                    draggable={true}\r\n                    throttleDrag={0}\r\n                    onDrag={({ target, transform }: any) => {\r\n                        target!.style.transform = transform;\r\n                    }}\r\n\r\n                    keepRatio={selectedFile.media !== MediaType.text}\r\n\r\n                    resizable={true}\r\n                    throttleResize={0}\r\n                    onResize={({ target, width, height, delta }: any) => {\r\n                        delta[0] && (target!.style.width = `${width}px`);\r\n                        delta[1] && (target!.style.height = `${height}px`);\r\n                    }}\r\n\r\n                    rotatable={true}\r\n                    throttleRotate={0}\r\n                    onRotate={({ target, transform }: any) => {\r\n                        target!.style.transform = transform;\r\n                    }}\r\n                >\r\n                </Moveable>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n","export const KnownExtensions = {\r\n    image: [\r\n        'png',\r\n        'jpg',\r\n        'gif',\r\n    ],\r\n    video: [\r\n        'mp4',\r\n        'mkv',\r\n    ]\r\n}","export const getExtension = (filename: string): string | null => {\r\n    const re = /(?:\\.([^.]+))?$/;\r\n\r\n    try {\r\n        const regexMatch = re.exec(filename);\r\n        if (regexMatch == null) return null;\r\n\r\n        return regexMatch[1];\r\n    } catch {\r\n        return null;\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { MediaType } from './constants/mediaType';\r\nimport { UploadedMediaDefault } from './constants/uploadedMediaDefaults';\r\nimport { KnownExtensions } from './constants/knownExtensions';\r\nimport { IUploadedImageMeta } from './constracts/uploadedImageMeta';\r\nimport { getExtension } from './helper/extensionHelper';\r\nimport classNames from 'classnames';\r\n\r\ninterface IProps {\r\n    onClick: () => void;\r\n    addFile: (file: IUploadedImageMeta) => void;\r\n}\r\n\r\nexport const DragAndDropContainer: React.FC<IProps> = (props: IProps) => {\r\n    const [isOver, setOver] = useState(false);\r\n\r\n    const handleDragOver = (e: any) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    };\r\n    const handleDrop = (e: any) => {\r\n        e.preventDefault();\r\n        if (e.dataTransfer.items) {\r\n            handleDatatranferItems(e.dataTransfer.items, e.clientX, e.clientY);\r\n        }\r\n        setOver(false);\r\n        e.stopPropagation();\r\n    };\r\n\r\n    const handlePaste = (e: any) => {\r\n        e.preventDefault();\r\n\r\n        const isFile = e.clipboardData &&\r\n            e.clipboardData.files &&\r\n            e.clipboardData.files.length\r\n\r\n        const isText = e.clipboardData.types &&\r\n            e.clipboardData.types.includes('text/plain');\r\n\r\n        const isValid = isFile || isText;\r\n        if (!isValid) { return; }\r\n\r\n        if (isFile && e.clipboardData.files) {\r\n            handleDatatranferItems(e.clipboardData.files, 250, 250);\r\n        }\r\n\r\n        if (isText && e.clipboardData) {\r\n            const text = e.clipboardData?.getData?.('text/plain');\r\n            addText(text);\r\n        }\r\n\r\n        e.stopPropagation();\r\n    };\r\n\r\n    const handleDoubleClick = () => addText();\r\n\r\n    const addText = (text?: string) => {\r\n        props.addFile({\r\n            file: ({ text } as any),\r\n            media: MediaType.text,\r\n            uuid: uuidv4(),\r\n            clientX: 250,\r\n            clientY: 250,\r\n            zIndex: UploadedMediaDefault.zIndex,\r\n        });\r\n    };\r\n\r\n    const handleDatatranferItems = (dataTransferItems: any[], clientX: number, clientY: number) => {\r\n        for (let i = 0; i < dataTransferItems.length; i++) {\r\n            const dataTransferItem = dataTransferItems[i];\r\n\r\n            let file = dataTransferItem;\r\n            if (dataTransferItem.kind === 'file') {\r\n                file = dataTransferItem.getAsFile();\r\n            }\r\n\r\n            const fileExt = getExtension(file.name);\r\n            let isVideo = false;\r\n            if (fileExt != null) isVideo = KnownExtensions.video.includes(fileExt);\r\n\r\n            props.addFile({\r\n                file,\r\n                media: isVideo ? MediaType.video : MediaType.image,\r\n                uuid: uuidv4(),\r\n                clientX,\r\n                clientY,\r\n                zIndex: UploadedMediaDefault.zIndex,\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={classNames('drag-drop-zone', { 'drag-is-over': isOver })}\r\n            onDragEnter={() => setOver(true)}\r\n            onDragOver={handleDragOver}\r\n            onDragLeave={() => setOver(false)}\r\n            onDrop={handleDrop}\r\n            onPaste={handlePaste}\r\n            onDoubleClick={handleDoubleClick}\r\n            onClick={props.onClick}\r\n        >\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\n\r\nimport { IUploadedImageMeta } from './constracts/uploadedImageMeta';\r\nimport { DeckItems } from './components/deckItems';\r\nimport { setUpModal } from './components/modal';\r\n\r\nimport { DragAndDropContainer } from './dragAndDropContainer';\r\n\r\nconst mouseTrap = require('react-mousetrap');\r\n\r\ninterface IProps {\r\n  bindShortcut: any;\r\n  unbindShortcut: any;\r\n}\r\ninterface IState {\r\n  files: Array<IUploadedImageMeta>\r\n  selectedFileUuid: string;\r\n}\r\n\r\nclass AppUnTrapped extends React.PureComponent<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      files: [],\r\n      selectedFileUuid: '',\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.bindShortcut('esc', this._deselect);\r\n    this.props.bindShortcut('del', this._deleteFile);\r\n    this.props.bindShortcut('backspace', this._deleteFile);\r\n\r\n    this.props.bindShortcut('up', this._incZIndex);\r\n    this.props.bindShortcut('down', this._decZIndex);\r\n\r\n    setUpModal();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.unbindShortcut('esc', this._deselect);\r\n    this.props.unbindShortcut('del', this._deleteFile);\r\n    this.props.unbindShortcut('backspace', this._deleteFile);\r\n\r\n    this.props.unbindShortcut('up', this._incZIndex);\r\n    this.props.unbindShortcut('down', this._decZIndex);\r\n  }\r\n\r\n  _deselect = () => this.setSelectedFile('');\r\n  _deleteFile = () => {\r\n    if (this.state.selectedFileUuid == null || this.state.selectedFileUuid.length < 10) return;\r\n    this.setState((prevState: IState) => {\r\n      return {\r\n        files: [...prevState.files.filter(f => f.uuid !== prevState.selectedFileUuid)],\r\n        selectedFileUuid: '',\r\n      }\r\n    })\r\n  }\r\n  _incZIndex = () => this._alterZIndex(1);\r\n  _decZIndex = () => this._alterZIndex(-1);\r\n  _alterZIndex = (modifer: number) => {\r\n    if (this.state.selectedFileUuid == null || this.state.selectedFileUuid.length < 10) return;\r\n    this.setState((prevState: IState) => {\r\n      const index = prevState.files.findIndex(f => f.uuid === prevState.selectedFileUuid);\r\n      if (index == null) return null;\r\n\r\n      let newIndex = prevState.files[index].zIndex + modifer;\r\n      if (newIndex <= 0) newIndex = 1;\r\n\r\n      const alteredItem = { ...prevState.files[index], zIndex: newIndex };\r\n      const newFiles = [\r\n        ...prevState.files.slice(0, index),\r\n        alteredItem,\r\n        ...prevState.files.slice(index + 1)\r\n      ]\r\n      return {\r\n        files: newFiles,\r\n      }\r\n    })\r\n  }\r\n\r\n  addFile = (file: IUploadedImageMeta) => {\r\n    this.setState((prevState: IState) => {\r\n      return {\r\n        files: [...prevState.files, file],\r\n      }\r\n    })\r\n  }\r\n\r\n  setSelectedFile = (uuid: string) => {\r\n    this.setState({ selectedFileUuid: uuid });\r\n  }\r\n\r\n  render() {\r\n    const { files, selectedFileUuid } = this.state;\r\n    return (\r\n      <>\r\n        <DragAndDropContainer addFile={this.addFile} onClick={() => this.setState({ selectedFileUuid: '' })} />\r\n        <DeckItems files={files} selectedFileUuid={selectedFileUuid} setSelectedFile={this.setSelectedFile} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport const App = mouseTrap.mouseTrap(AppUnTrapped);\r\n","import ReactDOM from 'react-dom';\r\n\r\nimport { App } from './app';\r\n\r\nimport './scss/index.scss';\r\nimport 'react-edit-text/dist/index.css';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('deck')\r\n);\r\n"],"sourceRoot":""}