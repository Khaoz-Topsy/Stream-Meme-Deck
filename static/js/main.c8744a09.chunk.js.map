{"version":3,"sources":["components/uploadedImage.tsx","dragAndDropContainer.tsx","app.tsx","index.tsx"],"names":["UploadedImage","props","isSelected","uuid","selectedFile","enabledProps","top","right","bottom","left","topRight","bottomRight","bottomLeft","topLeft","defaultPosition","x","clientX","y","clientY","handle","disabled","scale","defaultSize","width","height","enable","className","classNames","src","URL","createObjectURL","file","onContextMenu","e","preventDefault","setSelectedFile","draggable","alt","name","DragAndDropContainer","handleDatatranferItems","dataTransferItems","i","length","dataTransferItem","kind","getAsFile","addFile","uuidv4","onDragOver","stopPropagation","onDrop","dataTransfer","items","onPaste","clipboardData","files","onClick","mouseTrap","require","AppUnTrapped","_deselect","_deleteFile","state","selectedFileUuid","setState","prevState","filter","f","this","bindShortcut","unbindShortcut","map","fileMeta","React","PureComponent","App","ReactDOM","render","document","getElementById"],"mappings":"qSAYaA,EAAkC,SAACC,GAC5C,IAAMC,EAAaD,EAAME,OAASF,EAAMG,aAElCC,EAAuB,CACzBC,IAAKJ,EACLK,MAAOL,EACPM,OAAQN,EACRO,KAAMP,EACNQ,SAAUR,EACVS,YAAaT,EACbU,WAAYV,EACZW,QAASX,GAEPY,EAAkB,CACpBC,EAAGd,EAAMe,QACTC,EAAGhB,EAAMiB,SAab,OACI,cAAC,IAAD,CACIC,OAAO,gBACPC,SAAUlB,EACVY,gBAAiBA,EACjBO,MAAO,EAJX,SASI,cAAC,IAAD,CAEIC,YAvBQ,CAChBC,MAAO,IACPC,OAAQ,KAsBAC,OAAQpB,EACRqB,UAAWC,IAAW,eAAgB,CAAE,SAAYzB,IAJxD,SAMI,qBACI0B,IAAKC,IAAIC,gBAAgB7B,EAAM8B,MAC/BC,cAxBK,SAACC,GAAY,IAAD,IAC7BA,EAAEC,iBACEhC,EAAiB,OAALD,QAAK,IAALA,GAAA,UAAAA,EAAOkC,uBAAP,cAAAlC,EAAyB,IAC/B,OAALA,QAAK,IAALA,GAAA,UAAAA,EAAOkC,uBAAP,cAAAlC,EAAyBA,EAAME,OAsBxBiC,WAAW,EACXC,IAAKpC,EAAM8B,KAAKO,QAVxB,sBACwBrC,EAAME,U,QCzC7BoC,EAAyC,SAACtC,GACnD,IA4BMuC,EAAyB,SAACC,EAA0BzB,EAAiBE,GACvE,IAAK,IAAIwB,EAAI,EAAGA,EAAID,EAAkBE,OAAQD,IAAK,CAC/C,IAAME,EAAmBH,EAAkBC,GAEvCX,EAAOa,EACmB,SAA1BA,EAAiBC,OACjBd,EAAOa,EAAiBE,aAG5B7C,EAAM8C,QAAQ,CACVhB,OACA5B,KAAM6C,cACNhC,UACAE,cAIZ,OACI,qBAAKQ,UAAW,iBACZuB,WA/Ce,SAAChB,GACpBA,EAAEC,iBACFD,EAAEiB,mBA8CEC,OA5CW,SAAClB,GAChBA,EAAEC,iBACED,EAAEmB,aAAaC,OACfb,EAAuBP,EAAEmB,aAAaC,MAAOpB,EAAEjB,QAASiB,EAAEf,SAE9De,EAAEiB,mBAwCEI,QArCY,SAACrB,GACjBA,EAAEC,iBAEcD,EAAEsB,eACdtB,EAAEsB,cAAcC,OAChBvB,EAAEsB,cAAcC,MAAMb,SAItBV,EAAEsB,cAAcC,OAChBhB,EAAuBP,EAAEsB,cAAcC,MAAO,IAAK,KAGvDvB,EAAEiB,oBAyBEO,QAASxD,EAAMwD,WCtDrBC,EAAYC,EAAQ,IAWpBC,E,kDACJ,WAAY3D,GAAgB,IAAD,8BACzB,cAAMA,IAkBR4D,UAAY,kBAAM,EAAK1B,gBAAgB,KAnBZ,EAoB3B2B,YAAc,WACuB,MAA/B,EAAKC,MAAMC,kBAA4B,EAAKD,MAAMC,iBAAiBrB,OAAS,IAChF,EAAKsB,UAAS,SAACC,GACb,MAAO,CACLV,MAAM,YAAKU,EAAUV,MAAMW,QAAO,SAAAC,GAAC,OAAIA,EAAEjE,OAAS+D,EAAUF,qBAC5DA,iBAAkB,QAzBG,EA8B3BjB,QAAU,SAAChB,GACT,EAAKkC,UAAS,SAACC,GACb,MAAO,CACLV,MAAM,GAAD,mBAAMU,EAAUV,OAAhB,CAAuBzB,SAjCP,EAsC3BI,gBAAkB,SAAChC,GACjB,EAAK8D,SAAS,CAAED,iBAAkB7D,KApClC,EAAK4D,MAAQ,CACXP,MAAO,GACPQ,iBAAkB,IALK,E,sDAS3B,WACEK,KAAKpE,MAAMqE,aAAa,MAAOD,KAAKR,WACpCQ,KAAKpE,MAAMqE,aAAa,MAAOD,KAAKP,e,kCAGtC,WACEO,KAAKpE,MAAMsE,eAAe,MAAOF,KAAKR,WACtCQ,KAAKpE,MAAMsE,eAAe,MAAOF,KAAKP,e,oBA0BxC,WAAU,IAAD,OACP,OACE,sBAAKpC,UAAU,aAAf,UACE,cAAC,EAAD,CAAsBqB,QAASsB,KAAKtB,QAASU,QAAS,kBAAM,EAAKQ,SAAS,CAAED,iBAAkB,QAE5FK,KAAKN,MAAMP,MAAMgB,KAAI,SAACC,GACpB,OACE,cAAC,EAAD,2BAEMA,GAFN,IAGErE,aAAc,EAAK2D,MAAMC,iBACzB7B,gBAAiB,EAAKA,kBAHjBsC,EAAStE,gB,GAnDHuE,IAAMC,eAgEpBC,EAAMlB,EAAUA,UAAUE,G,MC5EvCiB,IAASC,OACP,cAACF,EAAD,IACAG,SAASC,eAAe,W","file":"static/js/main.c8744a09.chunk.js","sourcesContent":["import React from 'react';\r\nimport classNames from 'classnames';\r\nimport Draggable from 'react-draggable';\r\nimport { Resizable, Enable } from \"re-resizable\";\r\n\r\nimport { IUploadedImageMeta } from '../constracts/uploadedImageMeta';\r\n\r\ninterface IProps extends IUploadedImageMeta {\r\n    selectedFile: string;\r\n    setSelectedFile: (uuid: string) => void;\r\n}\r\n\r\nexport const UploadedImage: React.FC<IProps> = (props: IProps) => {\r\n    const isSelected = props.uuid === props.selectedFile;\r\n\r\n    const enabledProps: Enable = {\r\n        top: isSelected,\r\n        right: isSelected,\r\n        bottom: isSelected,\r\n        left: isSelected,\r\n        topRight: isSelected,\r\n        bottomRight: isSelected,\r\n        bottomLeft: isSelected,\r\n        topLeft: isSelected,\r\n    }\r\n    const defaultPosition = {\r\n        x: props.clientX,\r\n        y: props.clientY,\r\n    };\r\n    const defaultSize = {\r\n        width: 200,\r\n        height: 200\r\n    };\r\n\r\n    const onImageClick = (e: any) => {\r\n        e.preventDefault();\r\n        if (isSelected) props?.setSelectedFile?.('');\r\n        else props?.setSelectedFile?.(props.uuid);\r\n    }\r\n\r\n    return (\r\n        <Draggable\r\n            handle=\".uploaded-img\"\r\n            disabled={isSelected}\r\n            defaultPosition={defaultPosition}\r\n            scale={1}\r\n        // onStart={this.handleStart}\r\n        // onDrag={this.handleDrag}\r\n        // onStop={this.handleStop}\r\n        >\r\n            <Resizable\r\n                key={`uploadedImg-${props.uuid}`}\r\n                defaultSize={defaultSize}\r\n                enable={enabledProps}\r\n                className={classNames('uploaded-img', { 'selected': isSelected })}\r\n            >\r\n                <img\r\n                    src={URL.createObjectURL(props.file)}\r\n                    onContextMenu={onImageClick}\r\n                    draggable={false}\r\n                    alt={props.file.name}\r\n                />\r\n            </Resizable>\r\n        </Draggable>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { IUploadedImageMeta } from './constracts/uploadedImageMeta';\r\n\r\ninterface IProps {\r\n    onClick: () => void;\r\n    addFile: (file: IUploadedImageMeta) => void;\r\n}\r\n\r\nexport const DragAndDropContainer: React.FC<IProps> = (props: IProps) => {\r\n    const handleDragOver = (e: any) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    };\r\n    const handleDrop = (e: any) => {\r\n        e.preventDefault();\r\n        if (e.dataTransfer.items) {\r\n            handleDatatranferItems(e.dataTransfer.items, e.clientX, e.clientY);\r\n        }\r\n        e.stopPropagation();\r\n    };\r\n\r\n    const handlePaste = (e: any) => {\r\n        e.preventDefault();\r\n\r\n        const isValid = e.clipboardData &&\r\n            e.clipboardData.files &&\r\n            e.clipboardData.files.length;\r\n\r\n        if (!isValid) { return; }\r\n\r\n        if (e.clipboardData.files) {\r\n            handleDatatranferItems(e.clipboardData.files, 250, 250);\r\n        }\r\n\r\n        e.stopPropagation();\r\n    };\r\n\r\n    const handleDatatranferItems = (dataTransferItems: any[], clientX: number, clientY: number) => {\r\n        for (let i = 0; i < dataTransferItems.length; i++) {\r\n            const dataTransferItem = dataTransferItems[i];\r\n\r\n            let file = dataTransferItem;\r\n            if (dataTransferItem.kind === 'file') {\r\n                file = dataTransferItem.getAsFile();\r\n            }\r\n\r\n            props.addFile({\r\n                file,\r\n                uuid: uuidv4(),\r\n                clientX,\r\n                clientY,\r\n            });\r\n        }\r\n    };\r\n    return (\r\n        <div className={'drag-drop-zone'}\r\n            onDragOver={handleDragOver}\r\n            onDrop={handleDrop}\r\n            onPaste={handlePaste}\r\n            onClick={props.onClick}\r\n        >\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\n\nimport { IUploadedImageMeta } from './constracts/uploadedImageMeta';\nimport { UploadedImage } from './components/uploadedImage';\n\nimport { DragAndDropContainer } from './dragAndDropContainer';\n\nconst mouseTrap = require('react-mousetrap');\n\ninterface IProps {\n  bindShortcut: any;\n  unbindShortcut: any;\n}\ninterface IState {\n  files: Array<IUploadedImageMeta>\n  selectedFileUuid: string;\n}\n\nclass AppUnTrapped extends React.PureComponent<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      files: [],\n      selectedFileUuid: '',\n    }\n  }\n\n  componentWillMount() {\n    this.props.bindShortcut('esc', this._deselect);\n    this.props.bindShortcut('del', this._deleteFile);\n  }\n\n  componentWillUnmount() {\n    this.props.unbindShortcut('esc', this._deselect);\n    this.props.unbindShortcut('del', this._deleteFile);\n  }\n\n  _deselect = () => this.setSelectedFile('');\n  _deleteFile = () => {\n    if (this.state.selectedFileUuid == null || this.state.selectedFileUuid.length < 10) return;\n    this.setState((prevState: IState) => {\n      return {\n        files: [...prevState.files.filter(f => f.uuid !== prevState.selectedFileUuid)],\n        selectedFileUuid: '',\n      }\n    })\n  }\n\n  addFile = (file: IUploadedImageMeta) => {\n    this.setState((prevState: IState) => {\n      return {\n        files: [...prevState.files, file],\n      }\n    })\n  }\n\n  setSelectedFile = (uuid: string) => {\n    this.setState({ selectedFileUuid: uuid });\n  }\n\n  render() {\n    return (\n      <div className=\"deck-inner\">\n        <DragAndDropContainer addFile={this.addFile} onClick={() => this.setState({ selectedFileUuid: '' })} />\n        {\n          this.state.files.map((fileMeta: IUploadedImageMeta) => {\n            return (\n              <UploadedImage\n                key={fileMeta.uuid}\n                {...fileMeta}\n                selectedFile={this.state.selectedFileUuid}\n                setSelectedFile={this.setSelectedFile}\n              />\n            )\n          })\n        }\n      </div >\n    );\n  }\n}\n\nexport const App = mouseTrap.mouseTrap(AppUnTrapped);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './app';\nimport './scss/index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('deck')\n);\n"],"sourceRoot":""}