{"version":3,"sources":["constants/mediaType.ts","components/uploadedImage.tsx","components/uploadedVideo.tsx","components/editableText.tsx","components/componentHandler.tsx","constants/knownExtensions.ts","helper/extensionHelper.ts","dragAndDropContainer.tsx","app.tsx","index.tsx"],"names":["MediaType","UploadedImage","props","src","URL","createObjectURL","file","onContextMenu","onChildClick","draggable","alt","name","UploadedVideo","autoPlay","loop","muted","type","EditableText","defaultValue","ComponentHandler","isSelected","uuid","selectedFile","clientX","clientY","media","enabledProps","top","right","bottom","left","topRight","bottomRight","bottomLeft","topLeft","defaultPosition","x","y","e","preventDefault","setSelectedFile","inner","image","video","text","handle","disabled","scale","defaultSize","width","height","enable","className","classNames","KnownExtensions","getExtension","filename","regexMatch","exec","DragAndDropContainer","handleDatatranferItems","dataTransferItems","i","length","dataTransferItem","kind","getAsFile","fileExt","isVideo","includes","addFile","uuidv4","onDragOver","stopPropagation","onDrop","dataTransfer","items","onPaste","clipboardData","files","onDoubleClick","onClick","mouseTrap","require","AppUnTrapped","_deselect","_deleteFile","state","selectedFileUuid","setState","prevState","filter","f","this","bindShortcut","unbindShortcut","map","fileMeta","React","PureComponent","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f6a0f35.chunk.js","sourcesContent":["export enum MediaType {\r\n    image,\r\n    video,\r\n    text\r\n}","import React from 'react';\r\n\r\ninterface IProps {\r\n    file: File;\r\n    onChildClick: (e: any) => void;\r\n}\r\n\r\nexport const UploadedImage: React.FC<IProps> = (props: IProps) => {\r\n    return (\r\n        <img\r\n            src={URL.createObjectURL(props.file)}\r\n            onContextMenu={props.onChildClick}\r\n            draggable={false}\r\n            alt={props.file.name}\r\n        />\r\n    );\r\n};\r\n","import React from 'react';\r\n\r\ninterface IProps {\r\n    file: File;\r\n    onChildClick: (e: any) => void;\r\n}\r\n\r\nexport const UploadedVideo: React.FC<IProps> = (props: IProps) => {\r\n    return (\r\n        <video autoPlay loop muted onContextMenu={props.onChildClick}>\r\n            <source src={URL.createObjectURL(props.file)}\r\n                type=\"video/mp4\"\r\n                draggable={false}>\r\n            </source>\r\n        </video>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { EditText } from 'react-edit-text';\r\n\r\nimport 'react-edit-text/dist/index.css';\r\n\r\ninterface IProps {\r\n    onChildClick: (e: any) => void;\r\n}\r\n\r\nexport const EditableText: React.FC<IProps> = (props: IProps) => {\r\n    return (\r\n        <div onContextMenu={props.onChildClick}>\r\n            <EditText defaultValue=\"Default Text\" />\r\n        </div>\r\n    );\r\n};\r\n","import classNames from 'classnames';\r\nimport { Enable, Resizable } from 're-resizable';\r\nimport React, { ReactNode } from 'react';\r\nimport Draggable from 'react-draggable';\r\nimport { MediaType } from '../constants/mediaType';\r\n\r\nimport { IUploadedImageMeta } from '../constracts/uploadedImageMeta';\r\nimport { UploadedImage } from './uploadedImage';\r\nimport { UploadedVideo } from './uploadedVideo';\r\nimport { EditableText } from './editableText';\r\n\r\ninterface IProps extends IUploadedImageMeta {\r\n    selectedFile: string;\r\n    setSelectedFile: (uuid: string) => void;\r\n}\r\n\r\nexport const ComponentHandler: React.FC<IProps> = (props: IProps) => {\r\n    const isSelected = props.uuid === props.selectedFile;\r\n    const { uuid,\r\n        clientX,\r\n        clientY,\r\n        media } = props;\r\n\r\n    const enabledProps: Enable = {\r\n        top: isSelected,\r\n        right: isSelected,\r\n        bottom: isSelected,\r\n        left: isSelected,\r\n        topRight: isSelected,\r\n        bottomRight: isSelected,\r\n        bottomLeft: isSelected,\r\n        topLeft: isSelected,\r\n    }\r\n    const defaultPosition = {\r\n        x: clientX,\r\n        y: clientY,\r\n    };\r\n    const defaultSize = {\r\n        width: 200,\r\n        height: 200\r\n    };\r\n\r\n    const onChildClick = (e: any) => {\r\n        e.preventDefault();\r\n        if (isSelected) props?.setSelectedFile?.('');\r\n        else props?.setSelectedFile?.(uuid);\r\n    }\r\n\r\n    let inner: ReactNode = (<div>Something went wrong</div>);\r\n    if (media === MediaType.image) { inner = (<UploadedImage file={props.file} onChildClick={onChildClick} />); }\r\n    if (media === MediaType.video) { inner = (<UploadedVideo file={props.file} onChildClick={onChildClick} />); }\r\n    if (media === MediaType.text) { inner = (<EditableText onChildClick={onChildClick} />); }\r\n\r\n    return (\r\n        <Draggable\r\n            handle=\".uploaded-media\"\r\n            disabled={isSelected}\r\n            defaultPosition={defaultPosition}\r\n            scale={1}\r\n        // onStart={this.handleStart}\r\n        // onDrag={this.handleDrag}\r\n        // onStop={this.handleStop}\r\n        >\r\n            <Resizable\r\n                key={`uploadedImg-${uuid}`}\r\n                defaultSize={defaultSize}\r\n                enable={enabledProps}\r\n                className={classNames('uploaded-media', { 'selected': isSelected })}\r\n            >\r\n                {inner}\r\n            </Resizable>\r\n        </Draggable>\r\n    );\r\n};\r\n","export const KnownExtensions = {\r\n    image: [\r\n        'png',\r\n        'jpg',\r\n        'gif',\r\n    ],\r\n    video: [\r\n        'mp4',\r\n        'mkv',\r\n    ]\r\n}","export const getExtension = (filename: string): string | null => {\r\n    const re = /(?:\\.([^.]+))?$/;\r\n\r\n    try {\r\n        const regexMatch = re.exec(filename);\r\n        if (regexMatch == null) return null;\r\n\r\n        return regexMatch[1];\r\n    } catch {\r\n        return null;\r\n    }\r\n}","import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { MediaType } from './constants/mediaType';\r\nimport { KnownExtensions } from './constants/knownExtensions';\r\nimport { IUploadedImageMeta } from './constracts/uploadedImageMeta';\r\nimport { getExtension } from './helper/extensionHelper';\r\n\r\ninterface IProps {\r\n    onClick: () => void;\r\n    addFile: (file: IUploadedImageMeta) => void;\r\n}\r\n\r\nexport const DragAndDropContainer: React.FC<IProps> = (props: IProps) => {\r\n    const handleDragOver = (e: any) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    };\r\n    const handleDrop = (e: any) => {\r\n        e.preventDefault();\r\n        if (e.dataTransfer.items) {\r\n            handleDatatranferItems(e.dataTransfer.items, e.clientX, e.clientY);\r\n        }\r\n        e.stopPropagation();\r\n    };\r\n\r\n    const handlePaste = (e: any) => {\r\n        e.preventDefault();\r\n\r\n        const isValid = e.clipboardData &&\r\n            e.clipboardData.files &&\r\n            e.clipboardData.files.length;\r\n\r\n        if (!isValid) { return; }\r\n\r\n        if (e.clipboardData.files) {\r\n            handleDatatranferItems(e.clipboardData.files, 250, 250);\r\n        }\r\n\r\n        e.stopPropagation();\r\n    };\r\n\r\n    const handleDoubleClick = () => {\r\n        props.addFile({\r\n            file: ({} as any),\r\n            media: MediaType.text,\r\n            uuid: uuidv4(),\r\n            clientX: 250,\r\n            clientY: 250,\r\n        });\r\n    };\r\n\r\n    const handleDatatranferItems = (dataTransferItems: any[], clientX: number, clientY: number) => {\r\n        for (let i = 0; i < dataTransferItems.length; i++) {\r\n            const dataTransferItem = dataTransferItems[i];\r\n\r\n            let file = dataTransferItem;\r\n            if (dataTransferItem.kind === 'file') {\r\n                file = dataTransferItem.getAsFile();\r\n            }\r\n\r\n            const fileExt = getExtension(file.name);\r\n            let isVideo = false;\r\n            if (fileExt != null) isVideo = KnownExtensions.video.includes(fileExt);\r\n\r\n            props.addFile({\r\n                file,\r\n                media: isVideo ? MediaType.video : MediaType.image,\r\n                uuid: uuidv4(),\r\n                clientX,\r\n                clientY,\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={'drag-drop-zone'}\r\n            onDragOver={handleDragOver}\r\n            onDrop={handleDrop}\r\n            onPaste={handlePaste}\r\n            onDoubleClick={handleDoubleClick}\r\n            onClick={props.onClick}\r\n        >\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\n\nimport { IUploadedImageMeta } from './constracts/uploadedImageMeta';\nimport { ComponentHandler } from './components/componentHandler';\n\nimport { DragAndDropContainer } from './dragAndDropContainer';\n\nconst mouseTrap = require('react-mousetrap');\n\ninterface IProps {\n  bindShortcut: any;\n  unbindShortcut: any;\n}\ninterface IState {\n  files: Array<IUploadedImageMeta>\n  selectedFileUuid: string;\n}\n\nclass AppUnTrapped extends React.PureComponent<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      files: [],\n      selectedFileUuid: '',\n    }\n  }\n\n  componentWillMount() {\n    this.props.bindShortcut('esc', this._deselect);\n    this.props.bindShortcut('del', this._deleteFile);\n  }\n\n  componentWillUnmount() {\n    this.props.unbindShortcut('esc', this._deselect);\n    this.props.unbindShortcut('del', this._deleteFile);\n  }\n\n  _deselect = () => this.setSelectedFile('');\n  _deleteFile = () => {\n    if (this.state.selectedFileUuid == null || this.state.selectedFileUuid.length < 10) return;\n    this.setState((prevState: IState) => {\n      return {\n        files: [...prevState.files.filter(f => f.uuid !== prevState.selectedFileUuid)],\n        selectedFileUuid: '',\n      }\n    })\n  }\n\n  addFile = (file: IUploadedImageMeta) => {\n    this.setState((prevState: IState) => {\n      return {\n        files: [...prevState.files, file],\n      }\n    })\n  }\n\n  setSelectedFile = (uuid: string) => {\n    this.setState({ selectedFileUuid: uuid });\n  }\n\n  render() {\n    return (\n      <div className=\"deck-inner\">\n        <DragAndDropContainer addFile={this.addFile} onClick={() => this.setState({ selectedFileUuid: '' })} />\n        {\n          this.state.files.map((fileMeta: IUploadedImageMeta) => {\n            return (\n              <ComponentHandler\n                key={fileMeta.uuid}\n                {...fileMeta}\n                selectedFile={this.state.selectedFileUuid}\n                setSelectedFile={this.setSelectedFile}\n              />\n            )\n          })\n        }\n      </div >\n    );\n  }\n}\n\nexport const App = mouseTrap.mouseTrap(AppUnTrapped);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './app';\nimport './scss/index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('deck')\n);\n"],"sourceRoot":""}